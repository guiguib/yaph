<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<module rename-to="yaph">
	<!-- Inherit the core Web Toolkit stuff. -->
	<inherits name='com.google.gwt.user.User' />
	<inherits name="com.google.gwt.json.JSON" />
	<!-- Inherit Activities and Places. -->
	<inherits name='com.google.gwt.activity.Activity' />
	<inherits name='com.google.gwt.place.Place' />

	<!-- Inherit the default GWT style sheet. You can change -->
	<!-- the theme of your GWT application by uncommenting -->
	<!-- any one of the following lines. -->
	<!-- <inherits name='com.google.gwt.user.theme.clean.Clean' /> -->
	<!-- <inherits name='com.google.gwt.user.theme.standard.Standard'/> -->
	<!-- <inherits name='com.google.gwt.user.theme.chrome.Chrome'/> -->
	<!-- <inherits name='com.google.gwt.user.theme.dark.Dark'/> -->

	<!-- Other module inherits -->
	<inherits name="net.customware.gwt.dispatch.Dispatch" />
	<!-- <inherits name="com.google.gwt.i18n.I18N" /> -->

	<!-- Specify the app entry point class. -->
	<entry-point class='com.gbourquet.yaph.client.Yaph' />

	<!-- Specify the paths for translatable code -->
	<source path="service/callback" excludes="*/*Test*.java" />
	<source path="service/in" excludes="*/*Test*.java" />
	<source path="service/login/in" excludes="*/*Test*.java" />
	<source path="service/login/out" excludes="*/*Test*.java" />
	<source path="service/password/in" excludes="*/*Test*.java" />
	<source path="service/password/out" excludes="*/*Test*.java" />
	<source path="client" excludes="*/*Test*.java,**/HudsonTest.java" />
	<source path="serveur/metier" excludes="*/*Test*.java" />

	<extend-property name="locale" values="fr_FR" />

	<define-property name="mobile.user.agent" values="android, iphone, not_mobile" />
	<property-provider name="mobile.user.agent"><![CDATA[
  {
    var ua = window.navigator.userAgent.toLowerCase();
    if (ua.indexOf('android') != -1) { return 'android'; }
    if (ua.indexOf('iphone') != -1) { return 'iphone'; }
    //return 'android';
    //return 'iphone';
    return 'not_mobile';
  }
]]></property-provider>
	<set-property name="user.agent" value="safari" />
	<!-- Use ClientFactoryImpl by default -->
	<replace-with class="com.gbourquet.yaph.client.mvp.ClientFactoryImpl">
		<when-type-is class="com.gbourquet.yaph.client.mvp.ClientFactory" />
	</replace-with>

	<!-- Mobile needs a different implementation -->
	<replace-with class="com.gbourquet.yaph.client.mvp.ClientFactoryMobileImpl">
		<when-type-is class="com.gbourquet.yaph.client.mvp.ClientFactory" />
		<any>
			<when-property-is name="mobile.user.agent" value="android" />
			<when-property-is name="mobile.user.agent" value="iphone" />
		</any>
	</replace-with>
	<define-linker class="com.gbourquet.yaph.client.utils.OfflineLinker"
		name="offline" />

	<add-linker name="offline" />
	<add-linker name="xsiframe" />
</module>